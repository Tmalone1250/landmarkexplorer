{"ast":null,"code":"import OpenAI from 'openai';\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\nexport const getAIEnhancedDescription = async landmark => {\n  try {\n    const response = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: \"You are a knowledgeable tour guide providing interesting insights about landmarks. Keep responses brief and engaging, focusing on unique or lesser-known facts.\"\n      }, {\n        role: \"user\",\n        content: `Provide a brief, interesting insight about ${landmark.title}. Use the following description as context: ${landmark.description}`\n      }],\n      max_tokens: 100,\n      temperature: 0.7\n    });\n    return response.choices[0].message.content;\n  } catch (error) {\n    console.error('Error getting AI description:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["OpenAI","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","getAIEnhancedDescription","landmark","response","chat","completions","create","model","messages","role","content","title","description","max_tokens","temperature","choices","message","error","console"],"sources":["C:/Users/malon/CascadeProjects/landmark-explorer/src/services/aiService.js"],"sourcesContent":["import OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  dangerouslyAllowBrowser: true\n});\n\nexport const getAIEnhancedDescription = async (landmark) => {\n  try {\n    const response = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [\n        {\n          role: \"system\",\n          content: \"You are a knowledgeable tour guide providing interesting insights about landmarks. Keep responses brief and engaging, focusing on unique or lesser-known facts.\"\n        },\n        {\n          role: \"user\",\n          content: `Provide a brief, interesting insight about ${landmark.title}. Use the following description as context: ${landmark.description}`\n        }\n      ],\n      max_tokens: 100,\n      temperature: 0.7\n    });\n\n    return response.choices[0].message.content;\n  } catch (error) {\n    console.error('Error getting AI description:', error);\n    return null;\n  }\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,MAAMC,MAAM,GAAG,IAAID,MAAM,CAAC;EACxBE,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,wBAAwB;EAC5CC,uBAAuB,EAAE;AAC3B,CAAC,CAAC;AAEF,OAAO,MAAMC,wBAAwB,GAAG,MAAOC,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;MACpDC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE;MACX,CAAC,EACD;QACED,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE,8CAA8CR,QAAQ,CAACS,KAAK,+CAA+CT,QAAQ,CAACU,WAAW;MAC1I,CAAC,CACF;MACDC,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,OAAOX,QAAQ,CAACY,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACN,OAAO;EAC5C,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}