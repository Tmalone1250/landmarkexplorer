{"ast":null,"code":"import axios from 'axios';\nconst WIKI_API_ENDPOINT = 'https://en.wikipedia.org/w/api.php';\nexport const getLandmarks = async bounds => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'geosearch',\n    gscoord: `${bounds._ne.lat}|${bounds._ne.lng}`,\n    gsradius: 10000,\n    gslimit: 50,\n    origin: '*'\n  };\n  try {\n    const response = await axios.get(WIKI_API_ENDPOINT, {\n      params\n    });\n    const landmarks = await Promise.all(response.data.query.geosearch.map(async item => {\n      const details = await getLandmarkDetails(item.pageid);\n      return {\n        id: item.pageid,\n        title: item.title,\n        latitude: item.lat,\n        longitude: item.lon,\n        description: details.extract,\n        wikipediaUrl: `https://en.wikipedia.org/?curid=${item.pageid}`\n      };\n    }));\n    return landmarks;\n  } catch (error) {\n    console.error('Error fetching landmarks:', error);\n    return [];\n  }\n};\nconst getLandmarkDetails = async pageId => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    prop: 'extracts',\n    pageids: pageId,\n    exintro: true,\n    explaintext: true,\n    origin: '*'\n  };\n  try {\n    const response = await axios.get(WIKI_API_ENDPOINT, {\n      params\n    });\n    return response.data.query.pages[pageId];\n  } catch (error) {\n    console.error('Error fetching landmark details:', error);\n    return {\n      extract: 'No description available.'\n    };\n  }\n};","map":{"version":3,"names":["axios","WIKI_API_ENDPOINT","getLandmarks","bounds","params","action","format","list","gscoord","_ne","lat","lng","gsradius","gslimit","origin","response","get","landmarks","Promise","all","data","query","geosearch","map","item","details","getLandmarkDetails","pageid","id","title","latitude","longitude","lon","description","extract","wikipediaUrl","error","console","pageId","prop","pageids","exintro","explaintext","pages"],"sources":["C:/Users/malon/CascadeProjects/landmark-explorer/src/services/wikiService.js"],"sourcesContent":["import axios from 'axios';\n\nconst WIKI_API_ENDPOINT = 'https://en.wikipedia.org/w/api.php';\n\nexport const getLandmarks = async (bounds) => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'geosearch',\n    gscoord: `${bounds._ne.lat}|${bounds._ne.lng}`,\n    gsradius: 10000,\n    gslimit: 50,\n    origin: '*'\n  };\n\n  try {\n    const response = await axios.get(WIKI_API_ENDPOINT, { params });\n    const landmarks = await Promise.all(\n      response.data.query.geosearch.map(async (item) => {\n        const details = await getLandmarkDetails(item.pageid);\n        return {\n          id: item.pageid,\n          title: item.title,\n          latitude: item.lat,\n          longitude: item.lon,\n          description: details.extract,\n          wikipediaUrl: `https://en.wikipedia.org/?curid=${item.pageid}`\n        };\n      })\n    );\n    return landmarks;\n  } catch (error) {\n    console.error('Error fetching landmarks:', error);\n    return [];\n  }\n};\n\nconst getLandmarkDetails = async (pageId) => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    prop: 'extracts',\n    pageids: pageId,\n    exintro: true,\n    explaintext: true,\n    origin: '*'\n  };\n\n  try {\n    const response = await axios.get(WIKI_API_ENDPOINT, { params });\n    return response.data.query.pages[pageId];\n  } catch (error) {\n    console.error('Error fetching landmark details:', error);\n    return { extract: 'No description available.' };\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,iBAAiB,GAAG,oCAAoC;AAE9D,OAAO,MAAMC,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC5C,MAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,OAAO;IACfC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,GAAGL,MAAM,CAACM,GAAG,CAACC,GAAG,IAAIP,MAAM,CAACM,GAAG,CAACE,GAAG,EAAE;IAC9CC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACf,iBAAiB,EAAE;MAAEG;IAAO,CAAC,CAAC;IAC/D,MAAMa,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CACjCJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,GAAG,CAAC,MAAOC,IAAI,IAAK;MAChD,MAAMC,OAAO,GAAG,MAAMC,kBAAkB,CAACF,IAAI,CAACG,MAAM,CAAC;MACrD,OAAO;QACLC,EAAE,EAAEJ,IAAI,CAACG,MAAM;QACfE,KAAK,EAAEL,IAAI,CAACK,KAAK;QACjBC,QAAQ,EAAEN,IAAI,CAACd,GAAG;QAClBqB,SAAS,EAAEP,IAAI,CAACQ,GAAG;QACnBC,WAAW,EAAER,OAAO,CAACS,OAAO;QAC5BC,YAAY,EAAE,mCAAmCX,IAAI,CAACG,MAAM;MAC9D,CAAC;IACH,CAAC,CACH,CAAC;IACD,OAAOV,SAAS;EAClB,CAAC,CAAC,OAAOmB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,EAAE;EACX;AACF,CAAC;AAED,MAAMV,kBAAkB,GAAG,MAAOY,MAAM,IAAK;EAC3C,MAAMlC,MAAM,GAAG;IACbC,MAAM,EAAE,OAAO;IACfC,MAAM,EAAE,MAAM;IACdiC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAEF,MAAM;IACfG,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE,IAAI;IACjB5B,MAAM,EAAE;EACV,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACf,iBAAiB,EAAE;MAAEG;IAAO,CAAC,CAAC;IAC/D,OAAOW,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACsB,KAAK,CAACL,MAAM,CAAC;EAC1C,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO;MAAEF,OAAO,EAAE;IAA4B,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}